633题：两数之和的变形
关键点：low的值应该取根号C，不然会超出时间限制
Python代码：
class Solution(object):
    def judgeSquareSum(self, c):
        high, low =0, int(c**0.5)
        while low >= high:
            if (high*high + low*low) == c:
                return True
            elif (high*high + low*low) > c:
                low-=1
            else:
                high+=1
        return False
        
        
        
688题：两数之和的变形
关键点：从两边往中间依次检索，遇到不一样的之后，就从两边分别减去一个并检索一次，如果成功那就是改变一个就是true，否则就是改变1个也无法有回文串
      以下代码没通过，报了一个isvaild没有定义的错误，后续需要debug一下，基本思路可参考
class Solution(object):
    def validPalindrome(self, s):
        flag = 0
        high, low = len(s)-1, 0
        while high > low:
            if s[high] == s[low]:
                high-=1
                low+=1
            else:
                return isvaild(s, high-1, low)  or isvaild(s, high, low+1)
        return True

    def isvaild(s, high, low):
        while high > low:
            if  s[high] == s[low]:
                high-=1
                low+=1
            else:
                return False 
                
524题：两数之和的变形
题解：依旧是双指针，但是在使用双指针前需要对被查找集合做排序

1，根据题目要求，先将dictionary的字符串按照字符串的长度从大到小排序，且字符串符合字典序，进行排序，目的是为了接下查找时，dictionary中第一个符合条件字符串的即为题目要求的答案。
2，定义并初始化，字符串s的长度s_len，dictionary的长度d_len，dictionary中字符串的长度ds_len，指向字符串s的指针s_ptr，指向dictionary中第i个字符串的指针ds_ptr。
3，for循环遍历dictionary中所以字符串，获取当前dictionary中第i个的字符串的长度
4，while循环使用双指针，比较字符串s是否包含当前第i个dictionary中的字符串，
如果包含，则d_ptr遍历到dictionary中第i个的字符串的末尾，即d_ptr == ds_len - 1，返回dictionary[i]即为答案，即返回长度最长且字典序最小的字符串。
如果不包含，则d_ptr未遍历到dictionary中第i个的字符串的末尾，且s_ptr遍历到字符串s的末尾
5，退出当前while循环，即将遍历dictionary中的第i+1个字符串，双指针归零为下一个while循环做准备
6，如果退出for循环，则表示答案不存在，则返回空字符串。

代码：
class Solution(object):
    def findLongestWord(self, s, dictionary):
        ans, ans_len = '', 0
        for dStr in dictionary:
            i = j =0
            while i < len(s) and j < len(dStr):
                if s[i] == dStr[j]:
                    i += 1
                    j += 1
                else:
                    i += 1
            if  j == len(dStr):
                if j > ans_len:
                    ans, ans_len = dStr, j
                elif j == ans_len and dStr < ans:
                    ans = dStr
                    ans, ans_len = dStr, j

        return ans
